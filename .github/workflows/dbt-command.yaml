name: DBT Create Command

on:
  pull_request:
    types: [synchronize, opened, reopened]

jobs:
  dbt_run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get modified SQL files
        id: get_sql_files
        run: |
          # Get modified files from the PR
          modified_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          # Filter .sql files, remove path and extension
          sql_files=$(echo "$modified_files" | grep '\.sql$' | sed 's|.*/||; s|\.sql$||' | tr '\n' ' ')
          # Set output
          echo "sql_files=${sql_files}" >> $GITHUB_ENV

      - name: Create DBT run command
        id: dbt_run_command
        run: |
          if [ -z "$sql_files" ]; then
            echo "No SQL files modified."
            echo "dbt_run_command=No SQL files to run." >> $GITHUB_ENV
          else
            dbt_command="dbt run --select ${sql_files// /+} --full-refresh"
            echo "dbt_run_command=${dbt_command}" >> $GITHUB_ENV
          fi

      - name: Add DBT command as a PR comment
        uses: actions/github-script@v6
        with:
          script: |
            const command = process.env.dbt_run_command;
            const prNumber = context.payload.pull_request.number;
            if (command) {
              await github.rest.issues.createComment({
                issue_number: prNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `### DBT Run Command\n\`\`\`bash\n${command}\n\`\`\``
              });
            }
